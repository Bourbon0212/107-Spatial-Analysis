setwd("D:/GitHub/107-Spatial-Analysis/Week2")
rquote <- "rSTUDIO needs lots of practice!"
chars <- strsplit(rquote, split = "")[[1]]#strspilt()將句子裁切，""中放裁切條件
rcount <- 0
for (char in chars) {
if(char == 'r') {
rcount = rcount + 1
}
if(char == 'u') {
break
}
}
rcount
chars
rquote <- "rSTUDIO needs lots of practice!"
chars <- strsplit(rquote, split = "")[[1]]#strspilt()將句子裁切，""中放裁切條件
rcount <- 0
for (char in chars) {
if(char == 'r') {
rcount = rcount + 1
}
if(char == 'U') {
break
}
}
rcount
sapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = T)
sapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = F)
x = list(runif (10), runif (10)
sapply(x),
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAME = T)
x = list(runif (10), runif (10)
sapply(x,
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = F)
x = list(runif (10), runif (10))
View(x)
sapply(x,
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = F)
sapply(x,
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = T)
t <- sapply(x,
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = T)
View(t)
t <- sapply(x,
function(x) c(min = min(x), mean = mean(x), max = max(x)), USE.NAMES = F)
View(t)
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), numeric(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), numeric(4))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), numeric(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), string(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), str(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), vector(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), integer(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), double(3))
vapply(list(runif (10), runif (10)),
function(x) c(min = min(x), mean = mean(x), max = max(x)), numeric(3))
library(ggplot2)
library(rgdal)
library(tidyr)
library(dplyr)
FastFood <- readOGR(dsn = "./data", layer = "Tpe_Fastfood", encoding="utf8")
data <- FastFood@data
View(data)
library(ggplot2)
library(rgdal)
library(tidyr)
library(dplyr)
FastFood <- readOGR(dsn = "./data", layer = "Tpe_Fastfood", encoding="utf8")
library(ggplot2)
library(rgdal)
library(tidyr)
library(dplyr)
FastFood <- readOGR(dsn = "./data", layer = "Tpe_Fastfood", encoding="utf8")
View(FastFood)
data <- FastFood@data
View(data)
data <- FastFood@data
data$CHANGE <- (data$TYPE_99 - data$TYPE_90)
View(data)
data <- FastFood@data
# change from factor to numeric
data$TYPE_90 <- as.numeric(as.character(data$TYPE_90))
data$TYPE_99 <- as.numeric(as.character(data$TYPE_99))
data$CHANGE <- (data$TYPE_99 - data$TYPE_90)
View(data)
# assign larger smaller or the same
data_done <- data %>%
mutate(STATUS = case_when(
CHANGE < 0 ~ 'small'
CHANGE = 0 ~ 'same'
# assign larger smaller or the same
data_done <- data %>%
mutate(STATUS = case_when(
CHANGE < 0 ~ 'small',
CHANGE = 0 ~ 'same',
CHANGE > 0 ~ 'large'
))
View(data)
data$CHANGE > 0
data_done <- data %>%
mutate(STATUS = case_when(
CHANGE < 0 ~ 'small',
CHANGE == 0 ~ 'same',
CHANGE > 0 ~ 'large'
))
View(data_done)
#plot
ggplot(data_done, aes(x = TOWN, fill = STATUS)) +
geom_bar()
data_done <- data %>%
mutate(STATUS = case_when(
STORE == 'KFC' & CHANGE < 0 ~ 'kfc_small',
STORE == 'KFC' & CHANGE == 0 ~ 'kfc_same',
STORE == 'KFC' & CHANGE > 0 ~ 'kfc_large',
STORE == 'MIC' & CHANGE < 0 ~ 'mic_small',
STORE == 'MIC' & CHANGE == 0 ~ 'mic_same',
STORE == 'MIC' & CHANGE > 0 ~ 'mic_large',
))
View(data_done)
ggplot(data_done, aes(x = TOWN, fill = STATUS)) +
geom_bar()
ggplot(data_done, aes(x = TOWN, fill = STATUS)) +
geom_bar() +
scale_x_discrete('行政區') + scale_y_continuous('間數') +
scale_fill_discrete('銷售規模變化', labels = c('肯德基 提升', '肯德基 持平', '肯德基 減少', '麥當勞 增加', '麥當勞 持平', '麥當勞 減少')) +
ggtitle('台北市各行政區速食店銷售規模變化趨勢圖')
